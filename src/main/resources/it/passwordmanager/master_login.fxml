<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.PasswordField?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<!-- it is possible to set event handlers on JavaFX objects from inside the FXML file that defines the JavaFX objects.
You might prefer to set advanced event handlers from within Java code, but for simple event handlers setting them
from within FXML might be fine.
In order to define an event handler you need to use a <script> element

Example:

   <Label  fx:id="label1" text="Button not clicked"/>
   <Button fx:id="button1" text="Click me!" onAction="reactToClick()"/>

   <fx:script>
       function reactToClick() {
           label1.setText("Button clicked");
       }
   </fx:script>

-->
<!-- the <style> tag/attribute is used to declare a CSS styling inside a JavaFX object -->
<!-- You can set a controller class for an FXML document, a controller class can bind the GUI components declared in the
FXML file together, making the controller object act as a mediator (design pattern). There are two ways to set a controller
for an FXML file.
1. specify it inside the FXML file (__ the controller class is specified in the root element of the FXML file using
the fx:controller attribute. This attribute contains the name of the controller class. An instance of this class is created
when the FXML file is loaded. For this to work, the controller class MUST HAVE A NO-ARGUMENT CONSTRUCTOR__)
2. set an instance of the controller class on the FXMLLoader instance used to load the FXML document. (__

      TestController controller = new TestController();
      FXMLLoader loader = new FXMLLoader();
      loader.setController(controller);

__) -->

<AnchorPane prefHeight="400.0" prefWidth="600.0" style="-fx-background-color: #e5e5e5;"
            xmlns="http://javafx.com/javafx/18" xmlns:fx="http://javafx.com/fxml/1"
            fx:controller="it.passwordmanager.businessLogic.MasterLoginController">
    <children>
        <Label alignment="CENTER" layoutX="-1.0" layoutY="18.0" prefHeight="50.0" prefWidth="600.0" style="-fx-font-weight: bold;" text="PASSWORD MANAGER" textAlignment="CENTER" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="20.0">
            <font>
                <Font name="SansSerif Regular" size="27.0" />
            </font>
        </Label>
        <Label alignment="CENTER" layoutX="-3.0" layoutY="105.0" prefHeight="30.0" prefWidth="600.0" text="INSERT THE MASTER PASSWORD HERE" textAlignment="CENTER" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="150.0" />
        <PasswordField fx:id="password" layoutX="157.0" layoutY="177.0" onAction="#onEnterButtonClick" prefHeight="30.0" prefWidth="300.0" promptText="insert your password here..." style="-fx-border-color: #B5B5B5; -fx-border-width: 2;" AnchorPane.leftAnchor="150.0" AnchorPane.rightAnchor="150.0" AnchorPane.topAnchor="180.0" />
        <Button layoutX="120.0" layoutY="274.0" mnemonicParsing="false" onAction="#onEnterButtonClick" prefHeight="25.0" prefWidth="80.0" style="-fx-border-color: #C5C5C5; -fx-border-width: 2;" text="ENTER" AnchorPane.rightAnchor="120.0" AnchorPane.topAnchor="275.0" />
        <Button layoutX="391.0" layoutY="270.0" mnemonicParsing="false" onAction="#onQuitButtonClick" prefHeight="25.0" prefWidth="80.0" style="-fx-border-color: #C5C5C5; -fx-border-width: 2;" text="QUIT" AnchorPane.leftAnchor="120.0" AnchorPane.topAnchor="275.0" />
        <Button layoutX="544.0" layoutY="277.0" mnemonicParsing="false" onAction="#onAboutButtonClick" prefHeight="27.0" prefWidth="0.0" style="-fx-background-radius: 500,500;" AnchorPane.rightAnchor="30.0" AnchorPane.topAnchor="275.0">
            <graphic>
                <ImageView fitHeight="19.0" fitWidth="19.0">
                    <image>
                        <Image url="@../passwordmanager/images/info_button_icon.png" />
                    </image>
                </ImageView>
            </graphic>
        </Button>
    </children>
</AnchorPane>